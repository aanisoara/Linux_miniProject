{% set version = "36.0.0" %}

package:
  name: cryptography
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/c/cryptography/cryptography-{{ version }}.tar.gz
  sha256: 52f769ecb4ef39865719aedc67b4b7eae167bafa48dbc2a26dd36fa56460507f

build:
  number: 0
  skip: true  # [py<36 or win32]
  script: {{ PYTHON }} -m pip install . -vv
  missing_dso_whitelist:  # [linux]
    - $RPATH/ld64.so.1    # [linux]
requirements:
  build:
    - {{ compiler('rust') }}
    - vs2017_{{ target_platform }}    # [win]
  host:
    - python
    - cffi >=1.12
    - pip
    - setuptools >=40.6.0
    - setuptools-rust >=0.11.4
    - wheel
  run:
    - python
    - cffi >=1.12
    - openssl
    - libgcc-ng     # [linux]; needed by `_rust.abi3.so`

test:
  imports:
    - cryptography
    - cryptography.fernet
    - cryptography.hazmat
    - cryptography.hazmat.backends
    - cryptography.hazmat.backends.openssl
    - cryptography.hazmat.bindings
    - cryptography.hazmat.bindings.openssl
    - cryptography.hazmat.primitives
    - cryptography.hazmat.primitives.asymmetric
    - cryptography.hazmat.primitives.ciphers
    - cryptography.hazmat.primitives.kdf
    - cryptography.hazmat.primitives.twofactor
    - cryptography.x509
  requires:
    - cryptography-vectors {{ version }}
    - hypothesis >=1.11.4,!=3.79.2
    - iso8601
    - pip
    - pretend
    - pytest >=6.2.0
    - pytest-subtests
    - pytz
  source_files:
    - tests
  commands:
    - pip check
    # run_test.py will check that the correct openssl version is linked
    - pytest          # [not (arm64 or s390x or aarch64)]
    - pytest || true  # [arm64 or s390x or aarch64]

about:
  home: https://github.com/pyca/cryptography
  license: Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT
  license_family: BSD
  license_file: LICENSE
  summary: Provides cryptographic recipes and primitives to Python developers
  description: |
    Cryptography is a package which provides cryptographic recipes and
    primitives to Python developers. Our goal is for it to be your
    "cryptographic standard library". It supports Python 2.6-2.7, Python 3.3+,
    and PyPy 2.6+. Cryptography includes both high level recipes, and low level
    interfaces to common cryptographic algorithms such as symmetric ciphers,
    message digests and key derivation functions.
  doc_url: https://cryptography.io/
  doc_source_url: https://github.com/pyca/cryptography/blob/master/docs/index.rst
  dev_url: https://github.com/pyca/cryptography

extra:
  recipe-maintainers:
    - jakirkham
    - ocefpaf
    - chenghlee
